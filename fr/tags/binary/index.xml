<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Binary on Think
Love
Share</title>
    <link>https://thinkloveshare.github.io/fr/tags/binary/</link>
    <description>Recent content in Binary on Think
Love
Share</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 10 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://thinkloveshare.github.io/fr/tags/binary/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PWN 4/4 : Stack Pivot ToZeMoon !</title>
      <link>https://thinkloveshare.github.io/fr/hacking/pwn_4of4_stack_pivot/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thinkloveshare.github.io/fr/hacking/pwn_4of4_stack_pivot/</guid>
      <description>Bienvenue pour ce 4ème et dernier article d&amp;rsquo;introduction au pwn.
Je vous avais promis du lourd pour le final, chose dite, chose due !
L&amp;rsquo;exploit ne sera pas très long, mais en prévision : Une technique sympa, du reverse, et un outil open source qui vend du rêve !
Vous qui avez tenu les 3 articles précédents, j&amp;rsquo;espère que vous êtes toujours chauds !
Top départ : Reconnaissance !
Bonjour petit programme, que fais-tu dans la vie ?</description>
    </item>
    
    <item>
      <title>PWN 3/4 : SaperliROPette !</title>
      <link>https://thinkloveshare.github.io/fr/hacking/pwn_3of4_saperliropette/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thinkloveshare.github.io/fr/hacking/pwn_3of4_saperliropette/</guid>
      <description>Route du pwn, troisième et avant dernière escale, bienvenue à bord !
Hier, le simple buffer overflow et le ret2libc, aujourd&amp;rsquo;hui, le ROP, ou Return Oriented Programming, et demain&amp;hellip; Demain la conquête du monde !!!
Je vous ai laissé hier sur le ret2libc, qui, vu de loin, consiste à piocher dans la libc les fonctions qui nous intéressent. Sauf que cette attaque n&amp;rsquo;est pas possible dans le cas où le programme est compilé en statique, et difficilement faisable si l&amp;rsquo;ASLR est activé.</description>
    </item>
    
    <item>
      <title>PWN 2/4 : Retour case libc, piochez un shell ! </title>
      <link>https://thinkloveshare.github.io/fr/hacking/pwn_2of4_ret2libc/</link>
      <pubDate>Tue, 08 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thinkloveshare.github.io/fr/hacking/pwn_2of4_ret2libc/</guid>
      <description>Kewaaa ? Deux articles dans la même semaine ?
Eh bien&amp;hellip; On dirait bien que oui ! ^.^
Bienvenue pour ce 2&amp;frasl;4 ème article consacré au pwn / à l&amp;rsquo;exploit d&amp;rsquo;exécutables linux !
Au programme, le ret2libc, ou retour à la lib C. Toujours dans la famille des exploits type buffer overflow, et toujours avec les sources du collègue : https://cyrilbresch.ddns.net/
Je ne repasse pas par la liste des définitions, celle-ci ayant été bien dégrossie dans le premier article&amp;hellip;</description>
    </item>
    
    <item>
      <title>PWN 1/4 : Buffer Overflow, là où tout a commencé</title>
      <link>https://thinkloveshare.github.io/fr/hacking/pwn_1of4_buffer_overflow/</link>
      <pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thinkloveshare.github.io/fr/hacking/pwn_1of4_buffer_overflow/</guid>
      <description>printf(&amp;ldquo;Mme, Mr %s, bonjour. &amp;ldquo;, lecteur); Aujourd&amp;rsquo;hui, je vous propose un article plus hardu, un article plus poilu, un article plus barbu, en bref, un article qui pète des culs !
La notion abordée aujourd&amp;rsquo;hui est assez poussée, donc je sais que parmi les lecteurs habituels, vous serez nombreux à ne pas forcément pouvoir comprendre la totalité de l&amp;rsquo;article, c&amp;rsquo;est pourquoi je vais tenter de le rendre intéressant même pour les néophytes.</description>
    </item>
    
  </channel>
</rss>