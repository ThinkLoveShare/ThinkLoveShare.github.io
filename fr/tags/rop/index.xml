<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rop on Think
Love
Share</title>
    <link>https://thinkloveshare.github.io/fr/tags/rop/</link>
    <description>Recent content in Rop on Think
Love
Share</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 09 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://thinkloveshare.github.io/fr/tags/rop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PWN 3/4 : SaperliROPette !</title>
      <link>https://thinkloveshare.github.io/fr/hacking/pwn_3of4_saperliropette/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thinkloveshare.github.io/fr/hacking/pwn_3of4_saperliropette/</guid>
      <description>Route du pwn, troisième et avant dernière escale, bienvenue à bord !
Hier, le simple buffer overflow et le ret2libc, aujourd&amp;rsquo;hui, le ROP, ou Return Oriented Programming, et demain&amp;hellip; Demain la conquête du monde !!!
Je vous ai laissé hier sur le ret2libc, qui, vu de loin, consiste à piocher dans la libc les fonctions qui nous intéressent. Sauf que cette attaque n&amp;rsquo;est pas possible dans le cas où le programme est compilé en statique, et difficilement faisable si l&amp;rsquo;ASLR est activé.</description>
    </item>
    
  </channel>
</rss>