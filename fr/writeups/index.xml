<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Writeups on Think
Love
Share</title>
    <link>https://thinkloveshare.github.io/fr/writeups/</link>
    <description>Recent content in Writeups on Think
Love
Share</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 16 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://thinkloveshare.github.io/fr/writeups/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSAW - Algebra</title>
      <link>https://thinkloveshare.github.io/fr/writeups/csaw_2018/algebra/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thinkloveshare.github.io/fr/writeups/csaw_2018/algebra/</guid>
      <description>Description  Êtes-vous un vrai magicien ?
nc misc.chal.csaw.io 9002
 TL;DR Ce challenge consiste à recevoir des équations à résoudre puis envoyez le résultat afin d&amp;rsquo;obtenir le flag. Python et Sage, je vous invoque !
Methologie Un ami avec qui je parlais pendant que je codait ma solution à ce problème m&amp;rsquo;a dit :
 Bah, les équations sont simples, on a qu&amp;rsquo;à faire un script rapide (et sale) pour les résoudre !</description>
    </item>
    
    <item>
      <title>CSAW - Big boi</title>
      <link>https://thinkloveshare.github.io/fr/writeups/csaw_2018/big_boi/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thinkloveshare.github.io/fr/writeups/csaw_2018/big_boi/</guid>
      <description>Description  Seuls les big boi pwners passeront celui-là !
nc pwn.chal.csaw.io 9000
 Vous pouvez télécharger le fichier ELF ici
TL;DR Ce challenge est un simple buffer overflow avec une comparaison qui peut conduire à une exécution de code. C&amp;rsquo;est un pwn facile, donc le one-liner est de mise !
Methologie Etape 1 : Utilisez IDA pour décompiler le programme et éviter de perdre du temps, puis overflow au bon endroit avec la bonne valeur répétée pour accéder au code executant &amp;ldquo;/bin/bash&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>CSAW - Shell-&gt;Code</title>
      <link>https://thinkloveshare.github.io/fr/writeups/csaw_2018/shell_code/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thinkloveshare.github.io/fr/writeups/csaw_2018/shell_code/</guid>
      <description>Description  Les listes chainées sont géniales ! Elles vous permettent de chaîner des données ensemble.
nc pwn.chal.csaw.io 9005
 Vous pouvez télécharger le fichier ELF : ici
TL;DR This challenge uses linked list and leaks an address, the stack is executable, a short shellcode and a relative jump will do the trick !
Ce challenge utilise une liste chainée, fait fuiter une adresse, et la pile est exécutable. Un petit shellcode, un saut relatif et le tour est joué !</description>
    </item>
    
    <item>
      <title>CSAW - Short Circuit</title>
      <link>https://thinkloveshare.github.io/fr/writeups/csaw_2018/short_circuit/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thinkloveshare.github.io/fr/writeups/csaw_2018/short_circuit/</guid>
      <description>Description  Commencez à la patte du singe et descendez la ligne à haute tension, pour chaque fil branché a un élément, prenez une valeur on ou off. Ignorez la première partie. Format de flag standard.
-Elyk
 TL;DR Ce challenge consiste en l&amp;rsquo;analyse d&amp;rsquo;un superbe schéma électronique. Il est composé de diodes, de fils, de fils, de fils, de fils et de fils. Le but est d&amp;rsquo;extraire des bits de données du circuit.</description>
    </item>
    
    <item>
      <title>Security Fest - Excess ess 1</title>
      <link>https://thinkloveshare.github.io/fr/writeups/security_fest_2018/excess_ess_1/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thinkloveshare.github.io/fr/writeups/security_fest_2018/excess_ess_1/</guid>
      <description>Ce défi intitulé &amp;ldquo;Excess Ess 1&amp;rdquo; est un jeu de mot (phonétique) pour désigner XSS. C&amp;rsquo;est une attaque qui consiste à forcer le navigateur de notre victime à exécuter du code (la plupart du temps du javascript) sans son consentement. Ce défi a été proposé par l&amp;rsquo;édition 2018 du SecurityFest CTF.
L&amp;rsquo;objectif La plupart du temps, pour prouver qu&amp;rsquo;une XSS est possible, le hacker utilise une payload qui appelle la fonction alert.</description>
    </item>
    
  </channel>
</rss>